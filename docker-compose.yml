services:
  phonon:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - audio_data:/app/data
    depends_on:
      kafka:
        condition: service_healthy
      mysql:
        condition: service_healthy
        required: false
    environment:
      - DATABASE_DRIVER=${DATABASE_DRIVER:-sqlite}
      - MYSQL_HOST=mysql
      - MYSQL_USER=${MYSQL_USER:-phonon}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-phonon_password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-phonon}
      - KAFKA_BROKERS=kafka:9092

  cleanup:
    build:
      context: .
      dockerfile: Dockerfile.cleanup
    volumes:
      - audio_data:/app/data
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - KAFKA_BROKERS=kafka:9092

  mysql:
    image: mysql:8.0
    profiles:
      - mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root_password}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-phonon}
      - MYSQL_USER=${MYSQL_USER:-phonon}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-phonon_password}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u$$MYSQL_USER", "-p$$MYSQL_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    volumes:
      - kafka_data:/var/lib/kafka/data
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  mysql_data:
  kafka_data:
  zookeeper_data:
  zookeeper_log:
  audio_data: